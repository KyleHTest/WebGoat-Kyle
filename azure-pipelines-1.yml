# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- develop

pool:
  vmImage: ubuntu-latest
resources:
  repositories:
    - repository: AzureBoardsScript
      ref: master
      type: git
      name: Implementations
steps:
- checkout: AzureBoardsScript
- checkout: self
- task: CmdLine@2
  inputs:
    script: |
     pwd
     ls
     cd Implementations
     pwd
     ls
- task: SynopsysSecurityScan@1
  inputs:
    scanType: 'polaris'
    bridge_polaris_serverUrl: 'https://poc.polaris.synopsys.com'
    bridge_polaris_accessToken: 's4jpgckfat47f3dcaebrc486lgmkikhai2pkb3dahsoecu1tg9c25v3smatn2u8nirve6eaa48k7u'
    bridge_polaris_application_name: 'kyleh'
    bridge_polaris_project_name: 'AzureIssueTest-2'
    bridge_polaris_assessment_types: 'SAST,SCA'
    bridge_polaris_branch_name: '$(Build.SourceBranchName)'

- task: PythonScript@0
  inputs:
    scriptSource: 'filePath'
    scriptPath: 'Implementations/AzureBoardsScript/polaris_azure_ci.py'
    arguments: '--config "polaris-azure.conf" --polaris-application-name "kyleh" --polaris-project-name "ADO-Test-WebGoat-1" --polaris-branch-name $(Build.SourceBranchName) --polaris-severities-filter "''''critical'''',''''high'''',''''medium'''',''''low'''',''''info''''" --azure-project-name "PolarisTickets" --azure-iteration-path "iteration 2" --azure-area-path "area path test"'
    workingDirectory: '/home/vsts/work/1/s/Implementations/AzureBoardsScript/'
- script: cat /home/vsts/work/1/s/Implementations/AzureBoardsScript/logs/synopsys-azure.log
  condition: always()