# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- develop

pool:
  vmImage: ubuntu-latest
resources:
  repositories:
    - repository: AzureBoardsScript
      ref: master
      type: git
      name: Implementations
steps:
- checkout: self
- bash: |
    cd WebGoat-Kyle
    curl -fLsS -o bridge.zip https://sig-repo.synopsys.com/artifactory/bds-integrations-release/com/synopsys/integration/synopsys-bridge/latest/synopsys-bridge-linux64.zip && unzip -qo -d $(Agent.TempDirectory) bridge.zip && rm -f bridge.zip
    $(Agent.TempDirectory)/synopsys-bridge --verbose --stage polaris \
      polaris.assessment.types='SAST,SCA' \
      polaris.application.name='kyleh' \
      polaris.project.name='AzureIssueTest-2' \
      polaris.branch.name='Bash Test'
  env:
    BRIDGE_POLARIS_ACCESSTOKEN: 's4jpgckfat47f3dcaebrc486lgmkikhai2pkb3dahsoecu1tg9c25v3smatn2u8nirve6eaa48k7u'
    bridge_polaris_serverUrl: 'https://poc.polaris.synopsys.com'
  displayName: 'Polaris Full Scan'
- checkout: AzureBoardsScript
- task: CmdLine@2
  inputs:
    script: |
     python AzureBoardsScript/polaris_azure_ci.py -config "polaris-azure.conf" --polaris-application-name "kyleh" --polaris-project-name "AzureIssueTest-2" --polaris-branch-name $(Build.SourceBranchName) --polaris-severities-filter "''''critical'''',''''high'''',''''medium'''',''''low'''',''''info''''" --azure-project-name "PolarisTickets" --azure-iteration-path "iteration 2" --azure-area-path "area path test"

#- task: PythonScript@0
#  inputs:
#    scriptSource: 'filePath'
#    scriptPath: 'AzureBoardsScript/polaris_azure_ci.py'
#    arguments: '--config "polaris-azure.conf" --polaris-application-name "kyleh" --polaris-project-name "AzureIssueTest-2" --polaris-branch-name $(Build.SourceBranchName) --polaris-severities-filter "''''critical'''',''''high'''',''''medium'''',''''low'''',''''info''''" --azure-project-name "PolarisTickets" --azure-iteration-path "iteration 2" --azure-area-path "area path test"'
#    workingDirectory: '/home/vsts/work/1/s/AzureBoardsScript/'
#- script: cat /home/vsts/work/1/s/AzureBoardsScript/logs/synopsys-azure.log
#  condition: always()